!(function (b, l, r) {
    function c(t, e) {
        (this.elem = t), (this.$elem = b(t)), (this.options = e), (this.metadata = this.$elem.data("plugin-options"));
    }
    (c.defaults = (c.prototype = {
        public: function () {
            return {
                startDate: moment().startOf("day"),
                endDate: moment().startOf("day"),
                format: "L",
                dateSeparator: " - ",
                calendarCount: 2,
                mobileBreakpoint: 760,
                isHotelBooking: !1,
                dayText: {},
                inline: !1,
                minDate: null,
                maxDate: null,
                showHeader: !0,
                showFooter: !0,
                rangeOrientation: "horizontal",
                verticalRangeWidth: 180,
                showButtons: !1,
                startOnMonday: !1,
                container: "body",
                oneCalendarWidth: 230,
                enableKeyboard: !0,
                showOn: "bottom",
                arrowOn: "left",
                autoAlign: !0,
                locale: moment.locale(),
                singleDate: !1,
                target: null,
                autoCloseOnSelect: !1,
                startEmpty: !1,
                isRTL: !1,
                ranges: [
                    { title: "Today", startDate: moment(), endDate: moment() },
                    { title: "3 Days", startDate: moment(), endDate: moment().add(2, "days") },
                    { title: "5 Days", startDate: moment(), endDate: moment().add(4, "days") },
                    { title: "1 Week", startDate: moment(), endDate: moment().add(6, "days") },
                    { title: "Till Next Week", startDate: moment(), endDate: moment().endOf("week") },
                    { title: "Till Next Month", startDate: moment(), endDate: moment().endOf("month") },
                ],
                rangeLabel: "Ranges: ",
                cancelLabel: "Cancel",
                applyLabel: "Apply",
                nextMonthIcon: "<i class='fa fa-arrow-right'></i>",
                prevMonthIcon: "<i class='fa fa-arrow-left'></i>",
                rangeIcon: "<i class='fa fa-retweet'></i>",
                headerSeparator: "<i class='fa fa-chevron-right'></i>",
                onbeforeselect: function () {
                    return !0;
                },
                onafterselect: function () {},
                onbeforeshow: function () {},
                onbeforehide: function () {},
                onaftershow: function () {},
                onafterhide: function () {},
                onfirstselect: function () {},
                onrangeselect: function () {},
                onbeforemonthchange: function () {
                    return !0;
                },
                onaftermonthchange: function () {},
                onafteryearchange: function () {},
                ondraw: function () {},
                onBeforeInit: function () {},
                onBeforeDestroy: function () {
                    return !0;
                },
                oninit: function () {},
                ondestroy: function () {},
                onerror: function () {},
                validateClick: function () {
                    return !0;
                },
                onCancel: function () {
                    return !0;
                },
                disableDays: function () {
                    return !1;
                },
                disabledRanges: [],
                continuous: !1,
                disableOnlyStart: !1,
                disableOnlyEnd: !1,
                minSelectedDays: 0,
                enableMonthSwitcher: !0,
                enableYearSwitcher: !0,
                enableSwipe: !0,
                numericMonthSwitcher: !1,
                monthSwitcherFormat: "MMMM",
                showWeekNumbers: !1,
                hideOutOfRange: !1,
                DOBCalendar: !1,
            };
        },
        private: function () {
            return {
                startSelected: !1,
                currentDate: moment().startOf("day"),
                endSelected: !0,
                hoverDate: null,
                keyboardHoverDate: null,
                headerStartDay: null,
                headerStartDate: null,
                headerStartWeekday: null,
                headerEndDay: null,
                headerEndDate: null,
                headerEndWeekday: null,
                swipeTimeout: null,
                isMobile: !1,
                valElements: ["BUTTON", "OPTION", "INPUT", "LI", "METER", "PROGRESS", "PARAM"],
                dontHideOnce: !1,
                initiator: null,
                initComplete: !1,
                startDateBackup: null,
                startDateInitial: null,
                endDateInitial: null,
                firstValueSelected: !1,
                throttleTimeout: null,
                documentEvent: null,
                delayInputUpdate: !1,
                lastScrollX: 0,
                lastScrollY: 0,
                isTicking: !1,
                parentScrollEventsAttached: !1,
                rafID: 0,
                disabledDays: {},
            };
        },
        init: function () {
            return (
                (this.config = b.extend({}, this.public(), this.options, this.metadata)),
                    (this.globals = b.extend({}, this.private())),
                    (this.globals.isMobile = this.checkMobile()),
                    this.config.onBeforeInit(this),
                    this.applyConfig(),
                    this.fetchInputs(),
                    this.drawUserInterface(),
                    this.drawOverlay(),
                    this.addInitialEvents(),
                    this.addKeyboardEvents(),
                    this.$elem.data("caleran", this),
                    this.config.oninit(this),
                    (this.globals.initComplete = !0),
                    (this.globals.lastScrollX = 0),
                    (this.globals.lastScrollY = 0),
                    b(l).trigger("resize.caleran"),
                    this
            );
        },
        validateDates: function () {
            var t;
            moment(this.config.startDate, this.config.format).isValid() && moment(this.config.endDate, this.config.format).isValid()
                ? ((this.config.startDate = moment(this.config.startDate, this.config.format).middleOfDay().locale(this.config.locale)),
                    (this.config.endDate = moment(this.config.endDate, this.config.format).middleOfDay().locale(this.config.locale)),
                this.config.startDate.isAfter(this.config.endDate, "day") && ((t = this.config.startDate.clone()), (this.config.startDate = this.config.endDate.clone()), (this.config.endDate = t.clone()), (t = null)))
                : ((this.config.startDate = moment().middleOfDay().locale(this.config.locale)), (this.config.endDate = moment().middleOfDay().locale(this.config.locale))),
                (this.globals.currentDate = moment(this.config.startDate, this.config.format)),
                null !== this.config.minDate && moment(this.config.minDate, this.config.format).isValid() ? (this.config.minDate = moment(this.config.minDate, this.config.format).middleOfDay()) : (this.config.minDate = null),
                null !== this.config.maxDate && moment(this.config.maxDate, this.config.format).isValid() ? (this.config.maxDate = moment(this.config.maxDate, this.config.format).middleOfDay()) : (this.config.maxDate = null),
            null !== this.config.minDate &&
            null !== this.config.maxDate &&
            this.config.minDate.isAfter(this.config.maxDate, "day") &&
            ((t = this.config.minDate.clone()), (this.config.minDate = this.config.maxDate.clone()), (this.config.maxDate = t.clone()), (t = null)),
            null !== this.config.minDate && null !== this.config.startDate && this.config.minDate.isAfter(this.config.startDate, "day") && (this.config.startDate = this.config.minDate.clone()),
            null !== this.config.minDate && null !== this.config.endDate && this.config.minDate.isAfter(this.config.endDate, "day") && (this.config.endDate = this.config.minDate.clone()),
            null !== this.config.maxDate && null !== this.config.startDate && this.config.maxDate.isBefore(this.config.startDate, "day") && (this.config.startDate = this.config.maxDate.clone()),
            null !== this.config.maxDate && null !== this.config.endDate && this.config.maxDate.isBefore(this.config.endDate, "day") && (this.config.endDate = this.config.maxDate.clone()),
            (!1 === this.checkRangeContinuity() ||
                (1 == this.config.disableOnlyStart && this.isDisabled(this.config.startDate, this.config.isHotelBooking)) ||
                (!1 === this.config.singleDate && this.config.disableOnlyEnd && this.isDisabled(this.config.endDate, this.config.isHotelBooking)) ||
                (this.config.startEmpty && 0 == this.globals.firstValueSelected)) &&
            this.clearInput();
        },
        applyConfig: function () {
            null === this.config.target && (this.config.target = this.$elem),
            !0 === this.config.inline && (this.config.DOBCalendar = !1),
            1 == this.config.DOBCalendar && (this.config.singleDate = !0),
                ["startDate", "endDate", "minDate", "maxDate"].forEach(function (t) {
                    this.config[t] = this.fixDateTime(this.config[t]);
                }, this),
                this.config.ranges.map(function (t) {
                    return (t.startDate = this.fixDateTime(t.startDate)), (t.endDate = this.fixDateTime(t.endDate)), t;
                }, this),
                !1 === this.globals.isMobile
                    ? !0 === this.config.inline
                        ? ((this.container = this.$elem.wrapAll("<div class='caleran-container caleran-inline' tabindex='1' onclick=''></div>").parent()),
                            (this.input = b("<div class='caleran-input'></div>").appendTo(this.container)),
                            (this.elem.type = "hidden"),
                            (this.config.showButtons = !1),
                            this.setViewport())
                        : ((this.container = b("<div class='caleran-container caleran-popup' style='display: none;' onclick=''><div class='caleran-box-arrow-top'></div></div>").appendTo(this.config.container)),
                            (this.input = b("<div class='caleran-input'></div>").appendTo(this.container)),
                        this.config.showButtons && ((this.globals.delayInputUpdate = !0), (this.config.autoCloseOnSelect = !1)))
                    : (!0 === this.config.inline
                        ? ((this.container = this.$elem.wrapAll("<div class='caleran-container-mobile caleran-inline' tabindex='1' onclick=''></div>").parent()),
                            (this.input = b("<div class='caleran-input'></div>").appendTo(this.container)),
                            (this.elem.type = "hidden"),
                            (this.config.showButtons = !1))
                        : ((this.container = b("<div class='caleran-container-mobile' onclick=''></div>").appendTo(this.config.container)),
                            (this.input = b("<div class='caleran-input' style='display: none;'></div>").appendTo(this.container)),
                        this.config.showButtons && (this.config.autoCloseOnSelect = !1),
                        this.config.autoCloseOnSelect || (this.globals.delayInputUpdate = !0)),
                        this.$elem.on("focus", function () {
                            b(this).blur();
                        })),
            this.config.isHotelBooking && this.container.addClass("caleran-hotel-style"),
            this.config.isRTL && (this.container.css("direction", "rtl"), this.container.addClass("caleran-rtl")),
                this.clearRangeSelection();
        },
        clearRangeSelection: function () {
            for (var t = 0; t < this.config.ranges.length; t++) this.config.ranges[t].selected = !1;
            this.container.find(".caleran-range").each(function () {
                b(this).removeClass("caleran-range-selected");
            });
        },
        fetchInputs: function () {
            var t,
                e = null,
                e = -1 !== b.inArray(this.config.target.get(0).tagName, this.globals.valElements) ? this.config.target.val() : this.config.target.text();
            !1 === this.config.singleDate && 0 < e.indexOf(this.config.dateSeparator)
                ? 2 == (t = e.split(this.config.dateSeparator)).length &&
                moment(t[0], this.config.format, this.config.locale).isValid() &&
                moment(t[1], this.config.format, this.config.locale).isValid() &&
                ((this.config.startDate = moment(t[0], this.config.format, this.config.locale).middleOfDay()),
                    (this.config.endDate = moment(t[1], this.config.format, this.config.locale).middleOfDay()),
                    (this.globals.firstValueSelected = !0))
                : !0 === this.config.singleDate &&
                "" != (t = e) &&
                moment(t, this.config.format, this.config.locale).isValid() &&
                ((this.config.startDate = moment(t, this.config.format, this.config.locale).middleOfDay()), (this.config.endDate = moment(t, this.config.format, this.config.locale).middleOfDay()), (this.globals.firstValueSelected = !0)),
            this.config.startEmpty && !this.globals.firstValueSelected && this.clearInput(),
                this.validateDates();
        },
        drawUserInterface: function () {
            this.drawHeader(), (this.calendars = this.input.find(".caleran-calendars").first());
            var t = this.globals.currentDate.clone().middleOfDay();
            this.globals.disabledDays = {};
            for (var e, i = 0; i < this.config.calendarCount; i++) this.drawCalendarOfMonth(t), (t = t.add(1, "month"));
            this.calendars.find(".caleran-calendar").last().addClass("no-border-right"),
                this.drawArrows(),
                this.drawFooter(),
            (!0 !== this.globals.isMobile && !1 !== this.config.inline) || !this.globals.initComplete || this.setViewport(),
            !1 === this.globals.startSelected &&
            (this.globals.initComplete ? this.updateInput(!1) : ((e = this.globals.delayInputUpdate), (this.globals.delayInputUpdate = !1), this.updateInput(!1), (this.globals.delayInputUpdate = e))),
            this.globals.isMobile ||
            ("horizontal" === this.config.rangeOrientation
                ? this.input.css("width", this.config.calendarCount * this.config.oneCalendarWidth + "px")
                : this.input.css("width", this.config.calendarCount * this.config.oneCalendarWidth + this.config.verticalRangeWidth + "px")),
                this.reDrawCells();
        },
        drawOverlay: function () {
            0 != this.globals.isMobile &&
            (0 == b(".caleran-overlay").length
                ? ((this.overlay = b("<div class='caleran-overlay'></div>").appendTo("body")),
                    this.overlay.on("click.caleran tap.caleran", function () {
                        var t = b("body > .caleran-container-mobile");
                        0 < t.length &&
                        t.each(function () {
                            "none" != b(this).css("display") && b(this).find(".caleran-cancel").click();
                        });
                    }))
                : (this.overlay = b(".caleran-overlay").first()));
        },
        drawHeader: function () {
            var t = "<div class='caleran-header'><div class='caleran-header-start'><div class='caleran-header-start-day'></div><div class='caleran-header-start-date'></div><div class='caleran-header-start-weekday'></div></div>";
            !1 === this.config.singleDate &&
            (t +=
                "<div class='caleran-header-separator'>" +
                this.config.headerSeparator +
                "</div><div class='caleran-header-end'><div class='caleran-header-end-day'></div><div class='caleran-header-end-date'></div><div class='caleran-header-end-weekday'></div></div>"),
                this.input.append((t += "</div><div class='caleran-calendars'></div>")),
            !1 === this.config.showHeader && this.input.find(".caleran-header").hide(),
                (this.globals.headerStartDay = this.input.find(".caleran-header-start-day")),
                (this.globals.headerStartDate = this.input.find(".caleran-header-start-date")),
                (this.globals.headerStartWeekday = this.input.find(".caleran-header-start-weekday")),
                (this.globals.headerEndDay = this.input.find(".caleran-header-end-day")),
                (this.globals.headerEndDate = this.input.find(".caleran-header-end-date")),
                (this.globals.headerEndWeekday = this.input.find(".caleran-header-end-weekday")),
                this.updateHeader();
        },
        updateHeader: function () {
            this.config.startDate && this.config.startDate.locale(this.config.locale),
            this.config.endDate && this.config.endDate.locale(this.config.locale),
            (this.config.startEmpty && !1 === this.globals.firstValueSelected) ||
            (null !== this.config.startDate
                ? (this.globals.headerStartDay.text(this.localizeNumbers(this.config.startDate.date())),
                    this.globals.isMobile
                        ? this.globals.headerStartDate.text(this.config.startDate.format("MMM") + " " + this.localizeNumbers(this.config.startDate.year()))
                        : this.globals.headerStartDate.text(this.config.startDate.format("MMMM") + " " + this.localizeNumbers(this.config.startDate.year())),
                    this.globals.headerStartWeekday.text(this.config.startDate.format("dddd")))
                : (this.globals.headerStartDay.text(""), this.globals.headerStartDate.text(""), this.globals.headerStartWeekday.text("")),
            !1 === this.config.singleDate &&
            (null !== this.config.endDate
                ? (this.globals.headerEndDay.text(this.localizeNumbers(this.config.endDate.date())),
                    this.globals.isMobile
                        ? this.globals.headerEndDate.text(this.config.endDate.format("MMM") + " " + this.localizeNumbers(this.config.endDate.year()))
                        : this.globals.headerEndDate.text(this.config.endDate.format("MMMM") + " " + this.localizeNumbers(this.config.endDate.year())),
                    this.globals.headerEndWeekday.text(this.config.endDate.format("dddd")))
                : (this.globals.headerEndDay.text(""), this.globals.headerEndDate.text(""), this.globals.headerEndWeekday.text(""))));
        },
        isUpdateable: function () {
            var t,
                e = this.globals.delayInputUpdate;
            return (
                (t =
                    (this.config.startEmpty && !this.globals.firstValueSelected) ||
                    (!0 === this.config.singleDate && null === this.config.startDate) ||
                    (!1 === this.config.singleDate && (null === this.config.startDate || null === this.config.endDate))) && this.clearInput(),
                !t && !e
            );
        },
        updateInput: function (t) {
            this.config.startDate && this.config.startDate.locale(this.config.locale),
            this.config.endDate && this.config.endDate.locale(this.config.locale),
            this.isUpdateable() &&
            (-1 !== b.inArray(this.config.target.get(0).tagName, this.globals.valElements)
                ? !1 === this.config.singleDate
                    ? this.config.target.val(this.config.startDate.format(this.config.format) + this.config.dateSeparator + this.config.endDate.format(this.config.format))
                    : this.config.target.val(this.config.startDate.format(this.config.format))
                : !1 === this.config.singleDate
                    ? this.config.target.text(this.config.startDate.format(this.config.format) + this.config.dateSeparator + this.config.endDate.format(this.config.format))
                    : this.config.target.text(this.config.startDate.format(this.config.format)),
            !0 === this.globals.initComplete && !0 === t && (this.config.onafterselect(this, this.config.startDate.clone(), this.config.endDate.clone()), this.input.trigger("change")));
        },
        clearInput: function (t) {
            -1 !== b.inArray(this.config.target.get(0).tagName, this.globals.valElements) ? (this.config.singleDate, this.config.target.val("")) : (this.config.singleDate, this.config.target.text("")),
                (this.config.startDate = null),
                (this.config.endDate = null),
                t ? ((this.config.startEmpty = !0), (this.globals.firstValueSelected = !1)) : 1 == this.config.startEmpty && (this.globals.firstValueSelected = !1),
            this.globals.initComplete && (this.updateHeader(), 0 < (t = void 0 === this.footer ? [] : this.footer.find(".caleran-apply")).length && t.attr("disabled", "disabled"));
        },
        drawArrows: function () {
            var t = this.config.hideOutOfRange && this.config.minDate && this.globals.currentDate.clone().add(-1, "month").isBefore(this.config.minDate, "month"),
                e = this.config.hideOutOfRange && this.config.maxDate && this.globals.currentDate.clone().add(this.config.calendarCount, "month").isAfter(this.config.maxDate, "month");
            0 < this.container.find(".caleran-title").length &&
            (this.globals.isMobile
                ? (t || this.container.find(".caleran-title").prepend("<div class='caleran-prev'>" + this.config.prevMonthIcon + "</div>"),
                e || this.container.find(".caleran-title").append("<div class='caleran-next'>" + this.config.nextMonthIcon + "</div>"))
                : this.config.isRTL
                    ? (t ||
                    this.container
                        .find(".caleran-title")
                        .last()
                        .prepend("<div class='caleran-prev'>" + this.config.prevMonthIcon + "</div>"),
                    e ||
                    this.container
                        .find(".caleran-title")
                        .first()
                        .append("<div class='caleran-next'>" + this.config.nextMonthIcon + "</div>"))
                    : (t ||
                    this.container
                        .find(".caleran-title")
                        .first()
                        .prepend("<div class='caleran-prev'>" + this.config.prevMonthIcon + "</div>"),
                    e ||
                    this.container
                        .find(".caleran-title")
                        .last()
                        .append("<div class='caleran-next'>" + this.config.nextMonthIcon + "</div>")));
        },
        drawCalendarOfMonth: function (t) {
            var e = moment(t).locale(this.config.locale).startOf("month").startOf("isoweek").middleOfDay(),
                i = e.day(),
                n =
                    (1 == i && !1 === this.config.startOnMonday ? (e.add(-1, "days"), (i = 0)) : 0 === i && !0 === this.config.startOnMonday && (e.add(1, "days"), (i = 1)),
                    e.isAfter(moment(t).date(1)) && e.add(-7, "day"),
                    "<div class='caleran-calendar" + (this.config.showWeekNumbers ? " caleran-calendar-weeknumbers" : "") + "' data-month='" + t.month() + "'>"),
                a = 0,
                s = "",
                o = "",
                r =
                    (this.config.enableMonthSwitcher && (s = " class='caleran-month-switch'"),
                    this.config.enableYearSwitcher && (o = " class='caleran-year-switch'"),
                        (n =
                            n +
                            ("<div class='caleran-title'><b" + s + ">" + t.locale(this.config.locale).format("MMMM") + "</b>&nbsp;<span" + o + ">" + this.localizeNumbers(t.year()) + "</span></div>") +
                            "<div class='caleran-days-container'>"),
                        moment.localeData(this.config.locale).weekdaysShort());
            this.config.showWeekNumbers && (n += "<div class='caleran-dayofweek'>&nbsp;</div>");
            for (var l = i; l < i + 7; l++) n += "<div class='caleran-dayofweek'>" + r[l % 7] + "</div>";
            for (this.globals.disabledDays = Object.assign(this.globals.disabledDays, this.getDisabledDaysInCalendar(e)); a < 42; ) {
                var c = e.middleOfDay().unix(),
                    h = t.month() == e.month() ? "caleran-day" : "caleran-disabled";
                a % 7 == 0 && this.config.showWeekNumbers && (n += "<div class='caleran-weeknumber'><span>" + e.format("ww") + "</span></div>"),
                    (n += "<div class='" + h + "' data-value='" + c + "'><span>" + this.localizeNumbers(e.date()) + "</span>" + this.getDayText(c) + "</div>"),
                    e.add(moment.duration({ days: 1 })),
                    a++;
            }
            this.calendars.append((n = n + "</div>" + "</div>"));
        },
        getDayText: function (t) {
            return t in this.config.dayText ? "<span class='caleran-cell-text'>" + this.config.dayText[t] + "</span>" : "";
        },
        getDisabledDaysInCalendar: function (t) {
            for (var e = {}, i = -7; i < 49; i++) {
                var n = moment(t).add(i, "days").middleOfDay(),
                    a = n.unix();
                !(e[a] = 0) === this.config.disableDays(n) && (e[a] = 2);
                for (var s = 0; s < this.config.disabledRanges.length; s++) {
                    var o = this.config.disabledRanges[s];
                    n.isBetween(o.start, o.end, "day", "[]") && (e[a] = 2);
                }
            }
            if (this.config.isHotelBooking) {
                var r,
                    l = null;
                for (r in e) {
                    if (null !== l)
                        switch (e[r]) {
                            case 2:
                                switch (e[l]) {
                                    case 0:
                                    case 3:
                                        e[r] = 1;
                                }
                                break;
                            case 0:
                                switch (e[l]) {
                                    case 1:
                                    case 2:
                                        e[r] = 3;
                                }
                        }
                    l = r;
                }
            }
            return e;
        },
        drawFooter: function () {
            if (!1 === this.config.singleDate && !0 === this.config.showFooter) {
                "horizontal" === this.config.rangeOrientation || this.globals.isMobile
                    ? this.input.append("<div class='caleran-ranges'></div>")
                    : (this.input.addClass("caleran-input-vertical-range"),
                        this.input.wrapInner("<div class='caleran-left'></div>"),
                        b("<div class='caleran-right' style='max-width: " + this.config.verticalRangeWidth + "px; min-width: " + this.config.verticalRangeWidth + "px'><div class='caleran-ranges'></div></div>").insertAfter(
                            this.input.find(".caleran-left")
                        ));
                var t = this.input.parent().find(".caleran-ranges");
                t.append("<span class='caleran-range-header-container'>" + this.config.rangeIcon + "<div class='caleran-range-header'>" + this.config.rangeLabel + "</div></span>");
                for (var e = 0; e < this.config.ranges.length; e++)
                    t.append("<div class='caleran-range" + (this.config.ranges[e].selected ? " caleran-range-selected" : "") + "' data-id='" + e + "'>" + this.config.ranges[e].title + "</div>");
            }
            !this.globals.isMobile || this.config.inline || (!0 !== this.config.singleDate && !1 !== this.config.showFooter) || this.input.append("<div class='caleran-filler'></div>"),
            ((this.globals.isMobile && !this.config.inline) || (!this.globals.isMobile && !this.config.inline && this.config.showButtons)) &&
            (("horizontal" === this.config.rangeOrientation || this.globals.isMobile ? this.input : this.input.find(".caleran-right")).append("<div class='caleran-footer'></div>"),
                (this.footer = this.input.find(".caleran-footer")),
                this.footer.append("<button type='button' class='caleran-cancel'>" + this.config.cancelLabel + "</button>"),
                this.footer.append("<button type='button' class='caleran-apply'>" + this.config.applyLabel + "</button>"),
            !1 === this.globals.firstValueSelected && 1 == this.config.startEmpty && this.footer.find(".caleran-apply").attr("disabled", "disabled"),
            this.globals.isMobile && !1 === this.globals.endSelected && this.footer.find(".caleran-apply").attr("disabled", "disabled"));
        },
        drawNextMonth: function (t) {
            if (((t = t || l.event), 1 == this.config.hideOutOfRange && this.config.maxDate && this.globals.currentDate.clone().add(this.config.calendarCount, "month").isAfter(this.config.maxDate, "month"))) return !1;
            var e;
            null === this.globals.swipeTimeout &&
            ((e = this).globals.swipeTimeout = setTimeout(function () {
                var t;
                !0 === e.config.onbeforemonthchange(e, e.globals.currentDate.clone().startOfMonth(), "next") &&
                ((t = e.calendars.get(0).scrollTop),
                    e.globals.currentDate.middleOfDay().add(1, "month"),
                    e.reDrawCalendars(),
                    (e.calendars.get(0).scrollTop = t),
                    e.config.onaftermonthchange(e, e.globals.currentDate.clone().startOfMonth())),
                    (e.globals.swipeTimeout = null);
            }, 100)),
                this.stopBubbling(t);
        },
        drawPrevMonth: function (t) {
            if (((t = t || l.event), 1 == this.config.hideOutOfRange && this.config.minDate && this.globals.currentDate.clone().add(-1, "month").isBefore(this.config.minDate, "month"))) return !1;
            var e;
            null === this.globals.swipeTimeout &&
            ((e = this).globals.swipeTimeout = setTimeout(function () {
                var t;
                !0 === e.config.onbeforemonthchange(e, e.globals.currentDate.clone().startOfMonth(), "prev") &&
                ((t = e.calendars.get(0).scrollTop),
                    e.globals.currentDate.middleOfDay().subtract(1, "month"),
                    e.reDrawCalendars(),
                    (e.calendars.get(0).scrollTop = t),
                    e.config.onaftermonthchange(e, e.globals.currentDate.clone().startOfMonth())),
                    (e.globals.swipeTimeout = null);
            }, 100)),
                this.stopBubbling(t);
        },
        cellClicked: function (t) {
            ((t = t || l.event).target = t.target || t.srcElement), !1 === b(t.target).hasClass("caleran-day") && (t.target = b(t.target).closest(".caleran-day").get(0));
            var e,
                i = b(t.target).data("value"),
                i = moment.unix(i).middleOfDay();
            return (
                0 == this.config.validateClick(i) ||
                (!1 === this.config.singleDate
                    ? !1 === this.globals.startSelected
                        ? (null !== this.config.startDate && (this.globals.startDateBackup = this.config.startDate.clone()),
                            (this.config.startDate = i),
                            (this.config.endDate = null),
                            (this.globals.startSelected = !0),
                            (this.globals.endSelected = !1),
                        0 < (e = void 0 === this.footer ? [] : this.footer.find(".caleran-apply")).length && e.attr("disabled", "disabled"),
                            this.config.onfirstselect(this, this.config.startDate.clone()))
                        : (i.isBefore(this.config.startDate) && ((e = this.config.startDate.clone()), (this.config.startDate = i.clone()), (i = e)),
                            i.diff(this.config.startDate, "day") < this.config.minSelectedDays
                                ? ((this.globals.startSelected = !1), this.fetchInputs(), this.config.onerror(c, l.caleranErrors.ERROR_LESS_THAN_MIN_SELECTED))
                                : ((this.globals.startDateBackup = null),
                                    (this.config.endDate = i),
                                    (this.globals.endSelected = !0),
                                    (this.globals.startSelected = !1),
                                    (this.globals.hoverDate = null),
                                    !1 === this.config.onbeforeselect(this, this.config.startDate.clone(), this.config.endDate.clone())
                                        ? (this.fetchInputs(), this.config.onerror(c, l.caleranErrors.ERROR_REJECTED_BY_CALLBACK))
                                        : !1 === this.checkRangeContinuity()
                                            ? (this.fetchInputs(), this.config.onerror(c, l.caleranErrors.ERROR_SELECTION_NOT_CONTINUOUS))
                                            : ((this.globals.firstValueSelected = !0), this.clearRangeSelection(), this.updateInput(!0)),
                                    this.config.autoCloseOnSelect && !1 === this.config.inline ? this.hideDropdown(t) : void 0 !== this.footer && null != this.config.endDate && this.footer.find(".caleran-apply").removeAttr("disabled")))
                    : ((this.config.startDate = i),
                        (this.config.endDate = i),
                        (this.globals.endSelected = !0),
                        (this.globals.startSelected = !1),
                        !(this.globals.hoverDate = null) === this.config.onbeforeselect(this, this.config.startDate.clone(), this.config.endDate.clone())
                            ? ((this.globals.firstValueSelected = !0), this.clearRangeSelection(), this.updateInput(!0))
                            : (this.fetchInputs(), this.config.onerror(c, l.caleranErrors.ERROR_REJECTED_BY_CALLBACK)),
                        this.config.autoCloseOnSelect && !1 === this.config.inline ? this.hideDropdown(t) : void 0 !== this.footer && null != this.config.endDate && this.footer.find(".caleran-apply").removeAttr("disabled")),
                    this.reDrawCells(),
                    this.updateHeader(),
                    this.stopBubbling(t)),
                    !1
            );
        },
        checkRangeContinuity: function () {
            var t = this.config.endDate.diff(this.config.startDate, "days"),
                e = moment(this.config.startDate).middleOfDay();
            if ((0 === Object.keys(this.config.disableDays).length && (this.globals.disabledDays = Object.assign(this.globals.disabledDays, this.getDisabledDaysInCalendar(e))), 1 == this.config.disableOnlyStart))
                return !1 === this.isDisabled(this.config.startDate, this.config.isHotelBooking);
            if (1 == this.config.disableOnlyEnd) return !1 === this.isDisabled(this.config.endDate, this.config.isHotelBooking);
            if (this.config.continuous) {
                var i = e.middleOfDay().unix();
                if (1 == this.isDisabled(i, !1) && (!this.config.isHotelBooking || 1 === this.getDisabledLevel(i))) return !1;
                if (0 == e.isSame(this.config.endDate, "day")) {
                    e.middleOfDay().add(1, "days");
                    for (var n = 0; n <= t - 2; n++) {
                        if (((i = e.middleOfDay().unix()), 0 !== this.getDisabledLevel(i))) return !1;
                        e.add(1, "days");
                    }
                }
                if (((i = e.middleOfDay().unix()), 1 == this.isDisabled(i, !1) && (!this.config.isHotelBooking || 3 === this.getDisabledLevel(i)))) return !1;
            }
            return !0;
        },
        isDisabledOnDraw: function (t) {
            var e = moment(t).middleOfDay();
            if (!0 === this.config.disableDays(e)) return !0;
            for (var i = 0; i < this.config.disabledRanges.length; i++) {
                var n = this.config.disabledRanges[i];
                if (e.isBetween(n.start, n.end, "day", "[]")) return !0;
            }
        },
        isDisabled: function (t, e) {
            return (
                void 0 === e && (e = !1),
                (1 != this.config.disableOnlyStart || 1 != this.globals.startSelected) &&
                (1 != this.config.disableOnlyEnd || 0 != this.globals.startSelected) &&
                ("object" == typeof t && null !== t && (t = t.middleOfDay().unix()), e && this.config.isHotelBooking ? 2 === this.globals.disabledDays[t] : 0 !== this.globals.disabledDays[t])
            );
        },
        getDisabledLevel: function (t) {
            return "object" == typeof t && null !== t && (t = t.middleOfDay().unix()), this.globals.disabledDays[t];
        },
        cellHovered: function (t) {
            ((t = t || l.event).target = t.target || t.srcElement), !1 === b(t.target).hasClass("caleran-day") && (t.target = b(t.target).closest(".caleran-day").get(0));
            var e = b(t.target).data("value");
            (this.globals.hoverDate = moment.unix(e).middleOfDay()), !(this.globals.keyboardHoverDate = null) === this.globals.startSelected && this.reDrawCells(), this.stopBubbling(t);
        },
        reDrawCalendars: function () {
            this.input.empty(), this.drawUserInterface(), this.container.focus();
        },
        monthSwitchClicked: function () {
            if (!(0 < this.calendars.find(".caleran-month-selector").length)) {
                for (
                    var e = this, t = ((this.calendars.get(0).scrollTop = 0), b("<div class='caleran-month-selector'></div>").appendTo(this.calendars)), i = this.globals.currentDate.get("month"), n = this.globals.currentDate.clone(), a = 0;
                    a < 12;
                    a++
                )
                    n.month(a),
                        this.config.hideOutOfRange && (n.isBefore(this.config.minDate, "month") || n.isAfter(this.config.maxDate, "month"))
                            ? t.append("<div class='caleran-ms-month-disabled'>&nbsp;</div>")
                            : t.append(
                                "<div class='caleran-ms-month" +
                                (i == a ? " current" : "") +
                                "' data-month='" +
                                a +
                                "'>" +
                                (this.config.numericMonthSelector ? a + 1 : moment({ day: 15, hour: 12, month: a }).locale(this.config.locale).format(this.config.monthSwitcherFormat)) +
                                "</div>"
                            );
                t.css("display", "block"),
                    this.optimizeFontSize(t.find(".caleran-ms-month")),
                    t
                        .find(".caleran-ms-month")
                        .off("click")
                        .on("click", function (t) {
                            e.globals.currentDate.month(b(this).data("month")),
                                e.config.onaftermonthchange(e, e.globals.currentDate.clone().startOfMonth()),
                                e.reDrawCalendars(),
                                e.calendars.find(".caleran-month-selector").remove(),
                                e.stopBubbling(t);
                        });
            }
        },
        drawYearSwitch: function (t, e) {
            t.data("year", e), t.empty();
            var i = e - 6,
                n = e + 6;
            this.config.hideOutOfRange && (moment(i + "-01-01").isBefore(this.config.minDate, "year") || moment(i + "-12-31").isAfter(this.config.maxDate, "year"))
                ? t.append("<div class='caleran-ys-year-disabled'>&nbsp;</div>")
                : t.append("<div class='caleran-ys-year-prev'><i class='fa fa-angle-double-left'></i></div>");
            for (var a = e - 6; a < e + 7; a++)
                this.config.hideOutOfRange && (moment(a + "-06-01").isBefore(this.config.minDate, "year") || moment(a + "-06-01").isAfter(this.config.maxDate, "year"))
                    ? t.append("<div class='caleran-ys-year-disabled'>&nbsp;</div>")
                    : t.append("<div class='caleran-ys-year" + (e == a ? " current" : "") + "' data-year='" + a + "'>" + this.localizeNumbers(a) + "</div>");
            this.config.hideOutOfRange && (moment(n + "-01-01").isBefore(this.config.minDate, "year") || moment(n + "-12-31").isAfter(this.config.maxDate, "year"))
                ? t.append("<div class='caleran-ys-year-disabled'>&nbsp;</div>")
                : t.append("<div class='caleran-ys-year-next'><i class='fa fa-angle-double-right'></i></div>");
        },
        yearSwitchClicked: function () {
            var i, n, t;
            0 < this.calendars.find(".caleran-year-selector").length ||
            (((i = this).calendars.get(0).scrollTop = 0),
                (n = b("<div class='caleran-year-selector'></div>").appendTo(this.calendars)),
                (t = this.globals.currentDate.get("year")),
                this.drawYearSwitch(n, t),
                n.css("display", "block"),
                this.optimizeFontSize(n.find(".caleran-ys-year")),
                b(r)
                    .off("click.caleranys")
                    .on("click.caleranys", ".caleran-ys-year", function (t) {
                        i.globals.currentDate.year(b(this).data("year")),
                            i.config.onafteryearchange(i, i.globals.currentDate.clone().startOf("year")),
                            i.reDrawCalendars(),
                            i.calendars.find(".caleran-year-selector").remove(),
                        1 == i.config.DOBCalendar && i.calendars.find(".caleran-calendar").first().find(".caleran-month-switch").click(),
                            i.stopBubbling(t);
                    }),
                b(r)
                    .off("click.caleranysprev")
                    .on("click.caleranysprev", ".caleran-ys-year-prev", function (t) {
                        var e = n.data("year") - 13;
                        n.data("year", e), i.drawYearSwitch(n, e), i.stopBubbling(t);
                    }),
                b(r)
                    .off("click.caleranysnext")
                    .on("click.caleranysnext", ".caleran-ys-year-next", function (t) {
                        var e = n.data("year") + 13;
                        n.data("year", e), i.drawYearSwitch(n, e), i.stopBubbling(t);
                    }));
        },
        optimizeFontSize: function (t) {
            t.each(function (t, e) {
                (e = b(e)).wrapInner("<span class='adjust-subject'></span>").prepend("<span class='font-adjuster'>i</span>");
                var i = e.find(".adjust-subject"),
                    n = e.find(".font-adjuster");
                if (i.innerHeight() === n.innerHeight()) n.remove(), i.contents().unwrap();
                else {
                    for (var a = 0; i.innerHeight() !== n.innerHeight() && a < 16; ) {
                        var s = 0,
                            s = void 0 !== l.getComputedStyle ? parseFloat(l.getComputedStyle(n.get(0), null).getPropertyValue("font-size")) : parseFloat(n.css("font-size"));
                        if ((i.parent().css("font-size", s - 1 + "px"), n.css("font-size", s - 1 + "px"), s < 2)) break;
                        a++;
                    }
                    n.remove(), i.contents().unwrap();
                }
            });
        },
        showDropdown: function (t) {
            (t = t || l.event || jQuery.Event("click", { target: this.elem })), (t = t.target || t.srcElement);
            ((!this.globals.isMobile && "none" == this.container.css("display")) || (this.globals.isMobile && "none" == this.input.css("display"))) &&
            (t !== this.elem && ((this.globals.dontHideOnce = !0), (this.globals.initiator = t)),
                this.fetchInputs(),
                this.reDrawCalendars(),
                (this.globals.startDateInitial = this.config.startDate),
                (this.globals.endDateInitial = this.config.endDate),
                this.config.onbeforeshow(this),
                this.globals.isMobile ? (this.input.css({ display: "flex" }), this.overlay.show(), b("body").addClass("caleran-open")) : this.container.css({ display: "block" }),
                this.setViewport(),
            1 == this.config.DOBCalendar && this.calendars.find(".caleran-calendar").first().find(".caleran-year-switch").click(),
                this.config.onaftershow(this));
        },
        hideDropdown: function (t) {
            (t = t || l.event || jQuery.Event("click", { target: "body" })), (t = t.target || t.srcElement);
            this.globals.initiator !== t &&
            !1 === this.config.inline &&
            ((!this.globals.isMobile && "none" !== this.container.css("display")) || (this.globals.isMobile && "none" !== this.input.css("display"))) &&
            (this.config.startEmpty && this.globals.startSelected && !this.globals.firstValueSelected && (this.globals.startSelected = !1),
                this.config.onbeforehide(this),
                this.globals.isMobile ? (this.input.css({ display: "none" }), this.overlay.hide(), b("body").removeClass("caleran-open")) : this.container.css({ display: "none" }),
            (this.globals.hoverDate = null) !== this.globals.startDateBackup && ((this.config.startDate = this.globals.startDateBackup), (this.globals.startSelected = !1)),
                this.config.onafterhide(this));
        },
        reDrawCells: function () {
            var t = null != this.config.startDate ? this.config.startDate.middleOfDay().unix() : null,
                e = null != this.config.endDate ? this.config.endDate.middleOfDay().unix() : null,
                i = null != this.config.minDate ? this.config.minDate.middleOfDay().unix() : null,
                n = null != this.config.maxDate ? this.config.maxDate.middleOfDay().unix() : null,
                a = null != this.globals.hoverDate ? this.globals.hoverDate.middleOfDay().unix() : null,
                s = null != this.globals.keyboardHoverDate ? this.globals.keyboardHoverDate.middleOfDay().unix() : null,
                o = moment().middleOfDay().unix();
            this.lastHoverStatus = !1;
            for (var r = 0; r < this.config.calendarCount; r++)
                for (var l = this.calendars.find(".caleran-calendar").eq(r), c = l.find(".caleran-days-container > div").not(".caleran-dayofweek, .caleran-weeknumber"), h = l.data("month"), f = 0; f < c.length; f++) {
                    var d = b(c[f]),
                        u = parseInt(d.attr("data-value")),
                        g = moment.unix(u).middleOfDay().locale(this.config.locale),
                        p = "caleran-day",
                        m = g.day();
                    (6 != m && 0 !== m) || (p += " caleran-weekend"),
                    u === o && (p += " caleran-today"),
                        (p = this.addDisabledStyles(d, g, u, p, i, n, h)),
                        (p = this.addSelectedStyles(u, p, t, e, i, n)),
                        (p = this.addHoverStyles(d, u, p, this, t, a, s)),
                        d.attr("class", p);
                }
            this.attachEvents(), this.config.ondraw(this);
        },
        addSelectedStyles: function (t, e, i, n, a, s) {
            var o = this;
            return (
                (!1 !== o.config.startEmpty && !o.globals.firstValueSelected) ||
                (!1 === o.config.singleDate && null !== i && i === t && (e += " caleran-start"),
                !1 === o.config.singleDate && null !== n && n === t && (e += " caleran-end"),
                !1 === o.config.singleDate && null !== i && null !== n && t <= n && i <= t && (e += " caleran-selected"),
                !0 === o.config.singleDate && null !== i && i === t && (e += " caleran-selected caleran-start caleran-end")),
                    e
            );
        },
        addHoverStyles: function (t, e, i, n, a, s, o) {
            return (
                i.replace("caleran-hovered", "").replace("caleran-hovered-last", "").replace("caleran-hovered-first", ""),
                !0 === this.globals.startSelected && !1 === this.globals.endSelected && null !== s && ((s <= e && e <= a) || (e <= s && a <= e)) && (i += " caleran-hovered"),
                1 == this.config.enableKeyboard && null !== o && (!1 === this.globals.startSelected ? o == e && (i += " caleran-hovered") : ((e <= a && o <= e) || (a <= e && e <= o)) && (i += " caleran-hovered")),
                !1 === this.lastHoverStatus && 0 < i.indexOf("caleran-hovered") && ((this.lastHoverStatus = !0), (i += " caleran-hovered-first")),
                !0 === this.lastHoverStatus && i.indexOf("caleran-hovered") < 0 && (t.prev(".caleran-day").addClass("caleran-hovered-last"), (this.lastHoverStatus = !1)),
                    i
            );
        },
        addDisabledStyles: function (t, e, i, n, a, s, o) {
            if (this.isDisabled(i))
                if (0 == this.config.isHotelBooking) n = n.replace("caleran-day", "caleran-disabled caleran-disabled-range");
                else
                    switch (this.globals.disabledDays[i]) {
                        case 1:
                            n = n.replace("caleran-day", "caleran-day caleran-disabled-range caleran-disabled-range-start");
                            break;
                        case 2:
                            n = n.replace("caleran-day", "caleran-disabled caleran-disabled-range");
                            break;
                        case 3:
                            n = n.replace("caleran-day", "caleran-day caleran-disabled-range caleran-disabled-range-end");
                    }
            else ((null != s && s < i) || (null != a && i < a)) && (n = n.replace("caleran-day", "caleran-disabled"));
            return e.month() != o && (n += " caleran-not-in-month"), n;
        },
        localizeNumbers: function (t) {
            return moment.localeData(this.config.locale).postformat("" + t);
        },
        rangeClicked: function (t) {
            var e;
            if ((((t = t || l.event).target = t.target || t.srcElement), t.target.hasAttribute("data-id")))
                return (
                    (e = b(t.target).attr("data-id")),
                        (this.globals.currentDate = this.config.ranges[e].startDate.startOf("day").clone().middleOfDay()),
                        (this.config.startDate = this.config.ranges[e].startDate.startOf("day").clone().middleOfDay()),
                        (this.config.endDate = this.config.ranges[e].endDate.startOf("day").clone().middleOfDay()),
                        !(this.globals.firstValueSelected = !0) === this.checkRangeContinuity()
                            ? (this.fetchInputs(), this.config.onerror(c, l.caleranErrors.ERROR_RANGE_NOT_CONTINUOUS))
                            : (this.clearRangeSelection(),
                                (this.config.ranges[e].selected = !0),
                                this.config.onrangeselect(this, this.config.ranges[e]),
                                this.reDrawCalendars(),
                                this.setViewport(),
                            this.config.autoCloseOnSelect && this.hideDropdown()),
                        this.stopBubbling(t),
                        !1
                );
        },
        setViewport: function () {
            if (!0 === this.globals.isMobile) "none" !== this.input.css("display") && this.container.trigger("caleran:resize");
            else if ("none" !== this.container.css("display") && this.globals.initComplete && !1 === this.globals.isMobile && !1 === this.config.inline) {
                var t,
                    e = this.getViewport();
                switch (this.config.showOn) {
                    case "top":
                        this.config.autoAlign ? this.positionOnTopAlign(e) : this.positionOnTop(!1, e), this.horizontalAlign(e);
                        break;
                    case "left":
                        this.config.autoAlign ? this.positionOnLeftAlign(e) : this.positionOnLeft(!1, e), this.verticalAlign(e);
                        break;
                    case "right":
                        this.config.autoAlign ? this.positionOnRightAlign(e) : this.positionOnRight(!1, e), this.verticalAlign(e);
                        break;
                    case "bottom":
                        this.config.autoAlign ? this.positionOnBottomAlign(e) : this.positionOnBottom(!1, e), this.horizontalAlign(e);
                        break;
                    case "center":
                        this.positionOnCenter(e);
                        break;
                    default:
                        this.config.autoAlign ? this.positionOnBottomAlign(e) : this.positionOnBottom(!1, e), this.horizontalAlign(e);
                }
                "horizontal" !== this.config.rangeOrientation &&
                ((t = this.input.find(".caleran-header").outerHeight() + this.input.find(".caleran-calendars").outerHeight() + (0 < this.input.find(".caleran-footer").length ? this.input.find(".caleran-footer").outerHeight() : 0)),
                    this.input.find(".caleran-right").css("max-height", t));
            }
        },
        verticalAlign: function (t) {
            var e = this.getDimensions(this.container, !0),
                i = t.top - e.offsetTop,
                n = e.offsetTop + e.height - t.bottom;
            0 < i && Math.abs(i) < e.height
                ? (this.container.css({
                    top: function () {
                        return parseFloat(b(this).css("top").replace(/px$/, "")) + i;
                    },
                }),
                    this.container.find("div[class*='caleran-box-arrow-']").css({
                        top: function () {
                            return parseFloat(b(this).css("top").replace(/px$/, "")) - i;
                        },
                    }))
                : 0 < n &&
                Math.abs(n) < e.height &&
                (this.container.css({
                    top: function () {
                        return parseFloat(b(this).css("top").replace(/px$/, "")) - n;
                    },
                }),
                    this.container.find("div[class*='caleran-box-arrow-']").css({
                        top: function () {
                            return parseFloat(b(this).css("top").replace(/px$/, "")) + n;
                        },
                    }));
        },
        horizontalAlign: function (t) {
            var e = this.getDimensions(this.container, !0),
                i = e.offsetLeft + e.width - t.right;
            0 < i &&
            Math.abs(i) < e.width &&
            (this.container.css({
                left: function () {
                    return parseFloat(b(this).css("left").replace(/px$/, "")) - i;
                },
            }),
                this.container.find("div[class*='caleran-box-arrow-']").css({
                    left: function () {
                        return parseFloat(b(this).css("left").replace(/px$/, "")) + i;
                    },
                }));
        },
        getDropdownPos: function (t) {
            var e = this.getDimensions(this.$elem, !0),
                i = this.getDimensions(this.container, !0),
                n = parseInt(this.input.css("margin-left"), 10),
                a = parseFloat(this.container.find("div[class*='caleran-box-arrow']").first().outerHeight() / 2);
            switch (t) {
                case "left":
                    switch (this.config.arrowOn) {
                        case "top":
                            return { top: e.offsetTop - n - a - e.height / 2, left: e.offsetLeft - i.width - n, arrow: 0 };
                        case "center":
                            return { top: e.offsetTop - n - i.height / 2, left: e.offsetLeft - i.width - n, arrow: (i.height - 2 * a) / 2 - e.height / 2 };
                        case "bottom":
                            return { top: e.offsetTop - i.height + e.height + 2 * n + a, left: e.offsetLeft - i.width - n, arrow: i.height - 4 * a - 3 * n - e.height / 2 };
                        default:
                            return { top: e.offsetTop - n - a - e.height / 2, left: e.offsetLeft - i.width - n, arrow: 0 };
                    }
                    break;
                case "right":
                    switch (this.config.arrowOn) {
                        case "top":
                            return { top: e.offsetTop - n - a - e.height / 2, left: e.offsetLeft + e.width + n, arrow: 0 };
                        case "center":
                            return { top: e.offsetTop - n - i.height / 2, left: e.offsetLeft + e.width + n, arrow: (i.height - 2 * a) / 2 - e.height / 2 };
                        case "bottom":
                            return { top: e.offsetTop - i.height + e.height + 2 * n + a, left: e.offsetLeft + e.width + n, arrow: i.height - 4 * a - 3 * n - e.height / 2 };
                        default:
                            return { top: e.offsetTop - n - a - e.height / 2, left: e.offsetLeft + e.width + n, arrow: 0 };
                    }
                    break;
                case "top":
                    switch (this.config.arrowOn) {
                        case "left":
                            return { top: e.offsetTop - i.height - n, left: e.offsetLeft - n, arrow: 0 };
                        case "center":
                            return { top: e.offsetTop - i.height - n, left: e.offsetLeft - (i.width - 2 * n - e.width) / 2, arrow: (i.width - 5 * a) / 2 };
                        case "right":
                            return { top: e.offsetTop - i.height - n, left: e.offsetLeft - (i.width - e.width) + n, arrow: i.width - 5 * a + n };
                        default:
                            return { top: e.offsetTop - i.height - n, left: e.offsetLeft - n, arrow: 0 };
                    }
                    break;
                case "bottom":
                    switch (this.config.arrowOn) {
                        case "left":
                            return { top: e.offsetTop + e.height - n + a, left: e.offsetLeft - n, arrow: 0 };
                        case "center":
                            return { top: e.offsetTop + e.height - n + a, left: e.offsetLeft - (i.width - 2 * n - e.width) / 2, arrow: (i.width - 5 * a) / 2 };
                        case "right":
                            return { top: e.offsetTop + e.height - n + a, left: e.offsetLeft - (i.width - e.width) + n, arrow: i.width - 5 * a + n };
                        default:
                            return { top: e.offsetTop + e.height - n + a, left: e.offsetLeft - n, arrow: 0 };
                    }
                    break;
                case "center":
                    if ("center" === this.config.arrowOn) return { top: e.offsetTop - n - i.height / 2, left: e.offsetLeft - (i.width - 2 * n - e.width) / 2 };
            }
        },
        positionOnTop: function (t, e) {
            var i = this.getDropdownPos("top");
            if (t) return i;
            this.container.css({ left: i.left, top: i.top }), this.container.find("div[class*='caleran-box-arrow-']").attr("class", "caleran-box-arrow-bottom").css({ left: i.arrow });
        },
        positionOnBottom: function (t, e) {
            var i = this.getDropdownPos("bottom");
            if (t) return i;
            this.container.css({ left: i.left, top: i.top }), this.container.find("div[class*='caleran-box-arrow-']").attr("class", "caleran-box-arrow-top").css({ left: i.arrow });
        },
        positionOnLeft: function (t, e) {
            var i = this.getDropdownPos("left");
            if (t) return i;
            this.container.css({ left: i.left, top: i.top }), this.container.children("div[class*='caleran-box-arrow-']").attr("class", "caleran-box-arrow-right").css({ top: i.arrow });
        },
        positionOnRight: function (t, e) {
            var i = this.getDropdownPos("right");
            if (t) return i;
            this.container.css({ left: i.left, top: i.top }), this.container.children("div[class*='caleran-box-arrow-']").attr("class", "caleran-box-arrow-left").css({ top: i.arrow });
        },
        positionOnCenter: function (t) {
            var e = this.getDropdownPos("center"),
                i = Math.max(e.left + this.container[0].clientWidth - (t.right - 30), 0),
                t = Math.max(e.top + this.container[0].clientHeight - (t.bottom - 30), 0);
            this.config.autoAlign || (t = i = 0), (e.left -= i), (e.top -= t), this.container.css({ left: e.left, top: e.top }), this.container.find("div[class*='caleran-box-arrow-']").remove();
        },
        positionOnBottomAlign: function (t) {
            var e = this.positionOnBottom(!0, t),
                i = this.getDimensions(this.container);
            e.top + i.height < t.bottom ? this.positionOnBottom(!1, t) : this.positionOnTop(!1, t);
        },
        positionOnLeftAlign: function (t) {
            this.positionOnLeft(!0, t).left > t.left - 50 ? this.positionOnLeft(!1, t) : this.positionOnRight(!1, t);
        },
        positionOnRightAlign: function (t) {
            var e = this.positionOnRight(!0, t),
                i = this.getDimensions(this.container);
            e.left + i.width < t.right + 50 ? this.positionOnRight(!1, t) : this.positionOnLeft(!1, t);
        },
        positionOnTopAlign: function (t) {
            this.positionOnTop(!0, t).top > t.top ? this.positionOnTop(!1, t) : this.positionOnBottom(!1, t);
        },
        getDimensions: function (t, e) {
            var i = r.body,
                n = t[0],
                a = t.offset();
            if (t === this.$elem && 0 == this.globals.parentScrollEventsAttached) {
                var s = b.proxy(function () {
                    this.globals.isTicking ||
                    ((this.globals.isTicking = !0),
                        (this.globals.rafID = this.requestAnimFrame(
                            b.proxy(function () {
                                this.setViewport(), this.cancelAnimFrame(this.globals.rafID), (this.globals.isTicking = !1);
                            }, this)
                        )));
                }, this);
                if (n !== i) for (var o = n.parentNode; o !== i && null !== o; ) o.scrollHeight > o.offsetHeight && b(o).off("scroll.caleran").on("scroll.caleran", s), (o = o.parentNode);
                this.globals.parentScrollEventsAttached = !0;
            }
            return { width: n.offsetWidth, height: n.offsetHeight, offsetLeft: a.left, offsetTop: a.top };
        },
        getViewport: function () {
            var t = this.globals.lastScrollY,
                e = this.globals.lastScrollX,
                i = t + l.innerHeight;
            return { top: t, left: e, right: e + l.innerWidth, bottom: i };
        },
        attachEvents: function () {
            var t = b.proxy(this.drawNextMonth, this),
                e = b.proxy(this.drawPrevMonth, this),
                i = b.proxy(this.cellClicked, this),
                n = b.proxy(this.cellHovered, this),
                a = b.proxy(this.rangeClicked, this),
                s = b.proxy(this.monthSwitchClicked, this),
                o = b.proxy(this.yearSwitchClicked, this),
                r = "click.caleran";
            this.container
                .find(".caleran-next")
                .off(r)
                .one(r, this.config.isRTL ? e : t),
                this.container
                    .find(".caleran-prev")
                    .off(r)
                    .one(r, this.config.isRTL ? t : e),
                this.container.find(".caleran-day").off(r).on(r, i),
                this.container.find(".caleran-day").off("mouseover.caleran").on("mouseover.caleran", n),
                this.container.find(".caleran-disabled").not(".caleran-day").off(r),
                this.container.find(".caleran-range").off(r).on(r, a),
                this.container.find(".caleran-month-switch ").off(r).on(r, s),
                this.container.find(".caleran-year-switch ").off(r).on(r, o),
            !0 === this.globals.isMobile &&
            1 == this.config.enableSwipe &&
            ("function" == typeof b.fn.swiperight
                ? (this.input.find(".caleran-calendars").css("touch-action", "none"),
                    this.input.find(".caleran-calendars").on("swipeleft", this.config.isRTL ? t : e),
                    this.input.find(".caleran-calendars").on("swiperight", this.config.isRTL ? e : t))
                : ((i = new Hammer(this.input.find(".caleran-calendars").get(0))).off("swipeleft").on("swipeleft", this.config.isRTL ? t : e), i.off("swiperight").on("swiperight", this.config.isRTL ? e : t))),
            (!this.globals.isMobile && !this.config.showButtons) ||
            this.config.inline ||
            (this.input
                .find(".caleran-cancel")
                .off("click.caleran")
                .on(
                    "click.caleran",
                    b.proxy(function (t) {
                        1 == this.config.onCancel(this, this.config.startDate, this.config.endDate) &&
                        (this.globals.startDateInitial && (this.config.startDate = this.globals.startDateInitial.clone()),
                        this.globals.endDateInitial && (this.config.endDate = this.globals.endDateInitial.clone()),
                            this.hideDropdown(t));
                    }, this)
                ),
                this.input
                    .find(".caleran-apply")
                    .off("click.caleran")
                    .on(
                        "click.caleran",
                        b.proxy(function (t) {
                            !1 === this.config.onbeforeselect(this, this.config.startDate.clone(), this.config.endDate.clone())
                                ? (this.fetchInputs(), this.config.onerror(c, l.caleranErrors.ERROR_REJECTED_BY_CALLBACK))
                                : !1 === this.checkRangeContinuity()
                                    ? (this.fetchInputs(), this.config.onerror(c, l.caleranErrors.ERROR_SELECTION_NOT_CONTINUOUS))
                                    : ((this.globals.firstValueSelected = !0), this.globals.delayInputUpdate ? ((this.globals.delayInputUpdate = !1), this.updateInput(!0), (this.globals.delayInputUpdate = !0)) : this.updateInput(!0)),
                                this.hideDropdown(t);
                        }, this)
                    ));
        },
        addInitialEvents: function () {
            var e = this,
                t = "click.caleran";
            (this.globals.documentEvent = t + "_" + Math.round(new Date().getTime() + 100 * Math.random())),
                b(r).on(
                    this.globals.documentEvent,
                    b.proxy(function (t) {
                        var e;
                        !1 === this.globals.isMobile &&
                        !1 === this.config.inline &&
                        ((e = (t = t || l.event || jQuery.Event("click", { target: "body" })).target || t.srcElement),
                        0 === b(this.container).find(b(e)).length && this.elem !== e && 0 < this.container.is(":visible") && this.hideDropdown(t));
                    }, this)
                ),
            this.config.enableKeyboard && (t = "click.caleran focus.caleran"),
                this.$elem.off(t).on(
                    t,
                    b.proxy(
                        this.debounce(
                            function (t) {
                                var t = t || l.event || jQuery.Event("click", { target: "body" }),
                                    e = t.target || t.srcElement;
                                0 < this.input.get(0).clientHeight && this.config.target.get(0) !== e ? this.hideDropdown(t) : (b(r).trigger("click"), this.showDropdown(t));
                            },
                            200,
                            !0
                        ),
                        this
                    )
                ),
            this.globals.isMobile &&
            b(l).on(
                "resize.caleran",
                b.proxy(function () {
                    this.container.trigger("caleran:resize");
                }, this)
            ),
                this.container.on("caleran:resize", function () {
                    e.globals.rafID = e.requestAnimFrame(function () {
                        var t;
                        "none" !== e.input.css("display") &&
                        ((t = e.input.find(".caleran-calendar:visible:first").innerHeight()),
                            e.input.find(".caleran-calendars").css("height", t),
                        e.input.position().top < 0 && e.input.addClass("caleran-input-top-reset"),
                            l.innerWidth > l.innerHeight ? e.input.css("height", t + "px") : e.input.css("height", "auto"),
                            e.cancelAnimFrame(e.globals.rafID));
                    });
                }),
            "none" !== this.input.css("display") && this.globals.isMobile && this.container.trigger("caleran:resize"),
            !1 === this.globals.isMobile &&
            b(l).on("resize.caleran scroll.caleran", function () {
                e.globals.isTicking ||
                ((e.globals.isTicking = !0),
                    (e.globals.lastScrollX = l.scrollX || l.pageXOffset || r.documentElement.scrollLeft),
                    (e.globals.lastScrollY = l.scrollY || l.pageYOffset || r.documentElement.scrollTop),
                    (e.globals.rafID = e.requestAnimFrame(
                        b.proxy(function () {
                            this.setViewport(), (this.globals.isTicking = !1), this.cancelAnimFrame(this.globals.rafID);
                        }, e)
                    )));
            });
        },
        stopBubbling: function (t) {
            void 0 !== t.stopPropagation ? t.stopPropagation() : void 0 !== t.cancelBubble && (t.cancelBubble = !0), void 0 !== t.preventDefault && t.preventDefault(), (t.returnValue = !1);
        },
        debounce: function (n, a, s) {
            return function () {
                var t = this,
                    e = arguments,
                    i = s && !t.globals.throttleTimeout;
                clearTimeout(t.globals.throttleTimeout),
                    (t.globals.throttleTimeout = setTimeout(function () {
                        (t.globals.throttleTimeout = null), s || n.apply(t, e);
                    }, a)),
                i && n.apply(t, e);
            };
        },
        requestAnimFrame: function (t) {
            return "function" == typeof l.requestAnimationFrame
                ? requestAnimationFrame(t)
                : "function" == typeof l.webkitRequestAnimationFrame
                    ? webkitRequestAnimationFrame(t)
                    : "function" == typeof l.mozRequestAnimationFrame
                        ? mozRequestAnimationFrame(t)
                        : setTimeout(t, 100 / 6);
        },
        cancelAnimFrame: function (t) {
            return ("function" == typeof l.cancelAnimationFrame
                ? cancelAnimationFrame
                : "function" == typeof l.webkitCancelAnimationFrame
                    ? webkitCancelAnimationFrame
                    : "function" == typeof l.mozCancelAnimationFrame
                        ? mozCancelAnimationFrame
                        : clearTimeout)(t);
        },
        addKeyboardEvents: function () {
            var t;
            this.config.enableKeyboard &&
            ((t = b.proxy(function (t) {
                var e = t.which || t.keyCode,
                    i =
                        (null === this.globals.keyboardHoverDate
                            ? null === this.config.startDate
                                ? (this.globals.keyboardHoverDate = moment({ day: 1, month: this.calendars.first().data("month") }).middleOfDay())
                                : (this.globals.keyboardHoverDate = this.config.startDate.clone().middleOfDay())
                            : this.globals.keyboardHoverDate.middleOfDay(),
                            !1),
                    n = !1;
                switch (e) {
                    case 37:
                        this.globals.keyboardHoverDate.add(-1, "day"), (n = i = !0);
                        break;
                    case 38:
                        this.globals.keyboardHoverDate.add(-1, "week"), (n = i = !0);
                        break;
                    case 39:
                        this.globals.keyboardHoverDate.add(1, "day"), (n = i = !0);
                        break;
                    case 40:
                        this.globals.keyboardHoverDate.add(1, "week"), (n = i = !0);
                        break;
                    case 32:
                        this.input
                            .find(".caleran-day[data-value='" + this.globals.keyboardHoverDate.middleOfDay().unix() + "']")
                            .first()
                            .trigger("click.caleran"),
                            (n = !(i = !1));
                        break;
                    case 33:
                        t.shiftKey ? this.globals.keyboardHoverDate.add(-1, "years") : this.globals.keyboardHoverDate.add(-1, "months"), (n = i = !0);
                        break;
                    case 34:
                        t.shiftKey ? this.globals.keyboardHoverDate.add(1, "years") : this.globals.keyboardHoverDate.add(1, "months"), (n = i = !0);
                        break;
                    case 27:
                        this.hideDropdown(t);
                        break;
                    case 9:
                        this.config.startDate && this.config.endDate && this.input.is(":visible") ? this.input.find(".caleran-apply").click() : this.hideDropdown(t);
                        break;
                    case 13:
                        this.config.startDate && this.config.endDate && this.input.is(":visible") && this.input.find(".caleran-apply").click(), (n = !0);
                        break;
                    case 36:
                        t.shiftKey && ((this.globals.keyboardHoverDate = moment().middleOfDay()), (n = i = !0));
                }
                if (i || n)
                    return (
                        (this.globals.keyboardHoverDate = this.globals.keyboardHoverDate.middleOfDay()),
                        (this.globals.keyboardHoverDate.isBefore(moment.unix(this.input.find(".caleran-day:first").attr("data-value")), "day") ||
                            this.globals.keyboardHoverDate.isAfter(moment.unix(this.input.find(".caleran-day:last").attr("data-value")), "day")) &&
                        ((this.globals.currentDate = this.globals.keyboardHoverDate.clone().startOfMonth()), this.reDrawCalendars(), (i = !1)),
                        i && ((this.globals.hoverDate = null), this.reDrawCells()),
                        n && this.stopBubbling(t),
                            !1
                    );
            }, this)),
                this.$elem.off("keydown.caleran").on("keydown.caleran", t),
                this.container.off("keydown.caleran").on("keydown.caleran", t));
        },
        destroy: function () {
            this.config.onBeforeDestroy(this) &&
            (this.config.inline ? (this.input.remove(), this.globals.isMobile ? this.$elem.unwrap(".caleran-container-mobile") : this.$elem.unwrap(".caleran-container"), (this.elem.type = "text")) : this.container.remove(),
                b(r).off(this.globals.documentEvent),
                this.$elem.removeData("caleran"),
                this.config.ondestroy(this));
        },
        checkMobile: function () {
            return l.matchMedia("only screen and (max-width: " + this.config.mobileBreakpoint + "px)").matches;
        },
        fixDateTime: function (t) {
            return (t = null != t && 0 == moment.isMoment(t) ? ("string" == typeof t ? moment(t, this.config.format) : moment(t)).locale(this.config.locale) : t);
        },
        setStart: function (t) {
            this.setDisplayDate(t);
            t = this.fixDateTime(t);
            !1 === this.isDisabled(t) && moment(t).isValid() && ((this.config.startDate = moment(t)), this.refreshValues());
        },
        setEnd: function (t) {
            this.setDisplayDate(t);
            t = this.fixDateTime(t);
            !1 === this.isDisabled(t) && moment(t).isValid() && ((this.config.endDate = moment(t)), this.refreshValues());
        },
        setMinDate: function (t) {
            t = this.fixDateTime(t);
            moment(t).isValid() && ((this.config.minDate = moment(t)), this.refreshValues());
        },
        setMaxDate: function (t) {
            t = this.fixDateTime(t);
            moment(t).isValid() && ((this.config.maxDate = moment(t)), this.refreshValues());
        },
        setDisplayDate: function (t) {
            t = this.fixDateTime(t);
            moment(t).isValid() && ((this.globals.currentDate = moment(t)), this.reDrawCalendars());
        },
        refreshValues: function () {
            var t = this.globals.delayInputUpdate;
            (this.globals.delayInputUpdate = !1), this.validateDates(), this.updateInput(), (this.globals.delayInputUpdate = t), this.reDrawCells();
        },
    }).defaults),
        (b.fn.caleran = function (t) {
            return this.each(function () {
                new c(this, t).init();
            });
        }),
    "function" != typeof moment.fn.middleOfDay &&
    ((moment.fn.middleOfDay = function () {
        return this.hours(12).minutes(0).seconds(0), this;
    }),
        (moment.fn.startOfMonth = function () {
            return this.middleOfDay().date(1), this;
        })),
        (l.caleranErrors = {
            ERROR_LESS_THAN_MIN_SELECTED: "less_than_min_selected",
            ERROR_SELECTION_NOT_CONTINUOUS: "selection_not_continuous",
            ERROR_REJECTED_BY_CALLBACK: "rejected_by_callback",
            ERROR_RANGE_NOT_CONTINUOUS: "range_not_continuous",
        });
})(jQuery, window, document),
    (function (a, L, h) {
        "use strict";
        var N = ["", "webkit", "Moz", "MS", "ms", "o"],
            z = L.createElement("div"),
            F = "function",
            s = Math.round,
            f = Math.abs,
            V = Date.now;
        function P(t, e, i) {
            return setTimeout(X(t, i), e);
        }
        function i(t, e, i) {
            return Array.isArray(t) && (o(t, i[e], i), 1);
        }
        function o(t, e, i) {
            if (t)
                if (t.forEach) t.forEach(e, i);
                else if (t.length !== h) for (n = 0; n < t.length; ) e.call(i, t[n], n, t), n++;
                else for (var n in t) t.hasOwnProperty(n) && e.call(i, t[n], n, t);
        }
        function W(i, t, e) {
            var n = "DEPRECATED METHOD: " + t + "\n" + e + " AT \n";
            return function () {
                var t = new Error("get-stack-trace"),
                    t =
                        t && t.stack
                            ? t.stack
                                .replace(/^[^\(]+?[\n$]/gm, "")
                                .replace(/^\s+at\s+/gm, "")
                                .replace(/^Object.<anonymous>\s*\(/gm, "{anonymous}()@")
                            : "Unknown Stack Trace",
                    e = a.console && (a.console.warn || a.console.log);
                return e && e.call(a.console, n, t), i.apply(this, arguments);
            };
        }
        var r =
                "function" != typeof Object.assign
                    ? function (t) {
                        if (t === h || null === t) throw new TypeError("Cannot convert undefined or null to object");
                        for (var e = Object(t), i = 1; i < arguments.length; i++) {
                            var n = arguments[i];
                            if (n !== h && null !== n) for (var a in n) n.hasOwnProperty(a) && (e[a] = n[a]);
                        }
                        return e;
                    }
                    : Object.assign,
            Y = W(
                function (t, e, i) {
                    for (var n = Object.keys(e), a = 0; a < n.length; ) (i && t[n[a]] !== h) || (t[n[a]] = e[n[a]]), a++;
                    return t;
                },
                "extend",
                "Use `assign`."
            ),
            U = W(
                function (t, e) {
                    return Y(t, e, !0);
                },
                "merge",
                "Use `assign`."
            );
        function t(t, e, i) {
            var e = e.prototype,
                n = (t.prototype = Object.create(e));
            (n.constructor = t), (n._super = e), i && r(n, i);
        }
        function X(t, e) {
            return function () {
                return t.apply(e, arguments);
            };
        }
        function q(t, e) {
            return typeof t == F ? t.apply((e && e[0]) || h, e) : t;
        }
        function j(t, e) {
            return t === h ? e : t;
        }
        function e(e, t, i) {
            o(c(t), function (t) {
                e.addEventListener(t, i, !1);
            });
        }
        function n(e, t, i) {
            o(c(t), function (t) {
                e.removeEventListener(t, i, !1);
            });
        }
        function $(t, e) {
            for (; t; ) {
                if (t == e) return !0;
                t = t.parentNode;
            }
            return !1;
        }
        function l(t, e) {
            return -1 < t.indexOf(e);
        }
        function c(t) {
            return t.trim().split(/\s+/g);
        }
        function d(t, e, i) {
            if (t.indexOf && !i) return t.indexOf(e);
            for (var n = 0; n < t.length; ) {
                if ((i && t[n][i] == e) || (!i && t[n] === e)) return n;
                n++;
            }
            return -1;
        }
        function u(t) {
            return Array.prototype.slice.call(t, 0);
        }
        function K(t, i, e) {
            for (var n = [], a = [], s = 0; s < t.length; ) {
                var o = i ? t[s][i] : t[s];
                d(a, o) < 0 && n.push(t[s]), (a[s] = o), s++;
            }
            return (n = e
                ? i
                    ? n.sort(function (t, e) {
                        return t[i] > e[i];
                    })
                    : n.sort()
                : n);
        }
        function g(t, e) {
            for (var i, n = e[0].toUpperCase() + e.slice(1), a = 0; a < N.length; ) {
                if ((i = (i = N[a]) ? i + n : e) in t) return i;
                a++;
            }
            return h;
        }
        var G = 1;
        function Q(t) {
            t = t.ownerDocument || t;
            return t.defaultView || t.parentWindow || a;
        }
        var J = "ontouchstart" in a,
            Z = g(a, "PointerEvent") !== h,
            tt = J && /mobile|tablet|ip(ad|hone|od)|android/i.test(navigator.userAgent),
            p = "touch",
            et = "mouse",
            it = 25,
            m = 1,
            b = 4,
            v = 8,
            y = 1,
            D = 2,
            w = 4,
            T = 8,
            O = 16,
            x = D | w,
            E = T | O,
            nt = x | E,
            at = ["x", "y"],
            S = ["clientX", "clientY"];
        function k(e, t) {
            var i = this;
            (this.manager = e),
                (this.callback = t),
                (this.element = e.element),
                (this.target = e.options.inputTarget),
                (this.domHandler = function (t) {
                    q(e.options.enable, [e]) && i.handler(t);
                }),
                this.init();
        }
        function st(t, e, i) {
            var n = i.pointers.length,
                a = i.changedPointers.length,
                s = e & m && n - a == 0,
                n = e & (b | v) && n - a == 0,
                a = ((i.isFirst = !!s), (i.isFinal = !!n), s && (t.session = {}), (i.eventType = e), t),
                n = i,
                s = a.session,
                e = n.pointers,
                o = e.length,
                o = (s.firstInput || (s.firstInput = ot(n)), 1 < o && !s.firstMultiple ? (s.firstMultiple = ot(n)) : 1 === o && (s.firstMultiple = !1), s.firstInput),
                r = s.firstMultiple,
                l = (r || o).center,
                c = (n.center = rt(e)),
                o =
                    ((n.timeStamp = V()),
                        (n.deltaTime = n.timeStamp - o.timeStamp),
                        (n.angle = ht(l, c)),
                        (n.distance = C(l, c)),
                        (function (t, e) {
                            var i = e.center,
                                n = t.offsetDelta || {},
                                a = t.prevDelta || {},
                                s = t.prevInput || {};
                            (e.eventType !== m && s.eventType !== b) || ((a = t.prevDelta = { x: s.deltaX || 0, y: s.deltaY || 0 }), (n = t.offsetDelta = { x: i.x, y: i.y }));
                            (e.deltaX = a.x + (i.x - n.x)), (e.deltaY = a.y + (i.y - n.y));
                        })(s, n),
                        (n.offsetDirection = ct(n.deltaX, n.deltaY)),
                        lt(n.deltaTime, n.deltaX, n.deltaY)),
                l =
                    ((n.overallVelocityX = o.x),
                        (n.overallVelocityY = o.y),
                        (n.overallVelocity = f(o.x) > f(o.y) ? o.x : o.y),
                        (n.scale = r
                            ? (function (t, e) {
                                return C(e[0], e[1], S) / C(t[0], t[1], S);
                            })(r.pointers, e)
                            : 1),
                        (n.rotation = r
                            ? (function (t, e) {
                                return ht(e[1], e[0], S) + ht(t[1], t[0], S);
                            })(r.pointers, e)
                            : 0),
                        (n.maxPointers = !s.prevInput || n.pointers.length > s.prevInput.maxPointers ? n.pointers.length : s.prevInput.maxPointers),
                        (function (t, e) {
                            var i,
                                n,
                                a,
                                s = t.lastInterval || e,
                                o = e.timeStamp - s.timeStamp;
                            {
                                var r, l;
                                e.eventType != v && (it < o || s.velocity === h)
                                    ? ((r = e.deltaX - s.deltaX), (l = e.deltaY - s.deltaY), (o = lt(o, r, l)), (n = o.x), (a = o.y), (i = f(o.x) > f(o.y) ? o.x : o.y), (r = ct(r, l)), (t.lastInterval = e))
                                    : ((i = s.velocity), (n = s.velocityX), (a = s.velocityY), (r = s.direction));
                            }
                            (e.velocity = i), (e.velocityX = n), (e.velocityY = a), (e.direction = r);
                        })(s, n),
                        a.element);
            $(n.srcEvent.target, l) && (l = n.srcEvent.target), (n.target = l), t.emit("hammer.input", i), t.recognize(i), (t.session.prevInput = i);
        }
        function ot(t) {
            for (var e = [], i = 0; i < t.pointers.length; ) (e[i] = { clientX: s(t.pointers[i].clientX), clientY: s(t.pointers[i].clientY) }), i++;
            return { timeStamp: V(), pointers: e, center: rt(e), deltaX: t.deltaX, deltaY: t.deltaY };
        }
        function rt(t) {
            var e = t.length;
            if (1 === e) return { x: s(t[0].clientX), y: s(t[0].clientY) };
            for (var i = 0, n = 0, a = 0; a < e; ) (i += t[a].clientX), (n += t[a].clientY), a++;
            return { x: s(i / e), y: s(n / e) };
        }
        function lt(t, e, i) {
            return { x: e / t || 0, y: i / t || 0 };
        }
        function ct(t, e) {
            return t === e ? y : f(t) >= f(e) ? (t < 0 ? D : w) : e < 0 ? T : O;
        }
        function C(t, e, i) {
            var n = e[(i = i || at)[0]] - t[i[0]],
                e = e[i[1]] - t[i[1]];
            return Math.sqrt(n * n + e * e);
        }
        function ht(t, e, i) {
            var n = e[(i = i || at)[0]] - t[i[0]],
                e = e[i[1]] - t[i[1]];
            return (180 * Math.atan2(e, n)) / Math.PI;
        }
        k.prototype = {
            handler: function () {},
            init: function () {
                this.evEl && e(this.element, this.evEl, this.domHandler), this.evTarget && e(this.target, this.evTarget, this.domHandler), this.evWin && e(Q(this.element), this.evWin, this.domHandler);
            },
            destroy: function () {
                this.evEl && n(this.element, this.evEl, this.domHandler), this.evTarget && n(this.target, this.evTarget, this.domHandler), this.evWin && n(Q(this.element), this.evWin, this.domHandler);
            },
        };
        var ft = { mousedown: m, mousemove: 2, mouseup: b };
        function I() {
            (this.evEl = "mousedown"), (this.evWin = "mousemove mouseup"), (this.pressed = !1), k.apply(this, arguments);
        }
        t(I, k, {
            handler: function (t) {
                var e = ft[t.type];
                e & m && 0 === t.button && (this.pressed = !0),
                2 & e && 1 !== t.which && (e = b),
                this.pressed && (e & b && (this.pressed = !1), this.callback(this.manager, e, { pointers: [t], changedPointers: [t], pointerType: et, srcEvent: t }));
            },
        });
        var dt = { pointerdown: m, pointermove: 2, pointerup: b, pointercancel: v, pointerout: v },
            ut = { 2: p, 3: "pen", 4: et, 5: "kinect" },
            gt = "pointerdown",
            pt = "pointermove pointerup pointercancel";
        function mt() {
            (this.evEl = gt), (this.evWin = pt), k.apply(this, arguments), (this.store = this.manager.session.pointerEvents = []);
        }
        a.MSPointerEvent && !a.PointerEvent && ((gt = "MSPointerDown"), (pt = "MSPointerMove MSPointerUp MSPointerCancel")),
            t(mt, k, {
                handler: function (t) {
                    var e = this.store,
                        i = !1,
                        n = t.type.toLowerCase().replace("ms", ""),
                        n = dt[n],
                        a = ut[t.pointerType] || t.pointerType,
                        s = a == p,
                        o = d(e, t.pointerId, "pointerId");
                    n & m && (0 === t.button || s) ? o < 0 && (e.push(t), (o = e.length - 1)) : n & (b | v) && (i = !0),
                    o < 0 || ((e[o] = t), this.callback(this.manager, n, { pointers: e, changedPointers: [t], pointerType: a, srcEvent: t }), i && e.splice(o, 1));
                },
            });
        var bt = { touchstart: m, touchmove: 2, touchend: b, touchcancel: v };
        function vt() {
            (this.evTarget = "touchstart"), (this.evWin = "touchstart touchmove touchend touchcancel"), (this.started = !1), k.apply(this, arguments);
        }
        t(vt, k, {
            handler: function (t) {
                var e,
                    i = bt[t.type];
                i === m && (this.started = !0),
                this.started &&
                ((e = function (t, e) {
                    var i = u(t.touches),
                        t = u(t.changedTouches);
                    e & (b | v) && (i = K(i.concat(t), "identifier", !0));
                    return [i, t];
                }.call(this, t, i)),
                i & (b | v) && e[0].length - e[1].length == 0 && (this.started = !1),
                    this.callback(this.manager, i, { pointers: e[0], changedPointers: e[1], pointerType: p, srcEvent: t }));
            },
        });
        var yt = { touchstart: m, touchmove: 2, touchend: b, touchcancel: v };
        function Dt() {
            (this.evTarget = "touchstart touchmove touchend touchcancel"), (this.targetIds = {}), k.apply(this, arguments);
        }
        t(Dt, k, {
            handler: function (t) {
                var e = yt[t.type],
                    i = function (t, e) {
                        var i = u(t.touches),
                            n = this.targetIds;
                        if (e & (2 | m) && 1 === i.length) return (n[i[0].identifier] = !0), [i, i];
                        var a,
                            s,
                            o = u(t.changedTouches),
                            r = [],
                            l = this.target;
                        if (
                            ((s = i.filter(function (t) {
                                return $(t.target, l);
                            })),
                            e === m)
                        )
                            for (a = 0; a < s.length; ) (n[s[a].identifier] = !0), a++;
                        a = 0;
                        for (; a < o.length; ) n[o[a].identifier] && r.push(o[a]), e & (b | v) && delete n[o[a].identifier], a++;
                        if (r.length) return [K(s.concat(r), "identifier", !0), r];
                    }.call(this, t, e);
                i && this.callback(this.manager, e, { pointers: i[0], changedPointers: i[1], pointerType: p, srcEvent: t });
            },
        });
        var wt = 2500;
        function Tt() {
            k.apply(this, arguments);
            var t = X(this.handler, this);
            (this.touch = new Dt(this.manager, t)), (this.mouse = new I(this.manager, t)), (this.primaryTouch = null), (this.lastTouches = []);
        }
        function Ot(t) {
            var e,
                i,
                t = t.changedPointers[0];
            t.identifier === this.primaryTouch &&
            ((e = { x: t.clientX, y: t.clientY }),
                this.lastTouches.push(e),
                (i = this.lastTouches),
                setTimeout(function () {
                    var t = i.indexOf(e);
                    -1 < t && i.splice(t, 1);
                }, wt));
        }
        t(Tt, k, {
            handler: function (t, e, i) {
                var n = i.pointerType == p,
                    a = i.pointerType == et;
                if (!(a && i.sourceCapabilities && i.sourceCapabilities.firesTouchEvents)) {
                    if (n)
                        !function (t, e) {
                            t & m ? ((this.primaryTouch = e.changedPointers[0].identifier), Ot.call(this, e)) : t & (b | v) && Ot.call(this, e);
                        }.call(this, e, i);
                    else if (
                        a &&
                        function (t) {
                            for (var e = t.srcEvent.clientX, i = t.srcEvent.clientY, n = 0; n < this.lastTouches.length; n++) {
                                var a = this.lastTouches[n],
                                    s = Math.abs(e - a.x),
                                    a = Math.abs(i - a.y);
                                if (s <= 25 && a <= 25) return !0;
                            }
                            return !1;
                        }.call(this, i)
                    )
                        return;
                    this.callback(t, e, i);
                }
            },
            destroy: function () {
                this.touch.destroy(), this.mouse.destroy();
            },
        });
        var xt = g(z.style, "touchAction"),
            Et = xt !== h,
            St = "compute",
            kt = "manipulation",
            A = "none",
            M = "pan-x",
            R = "pan-y",
            Ct = (function () {
                if (!Et) return !1;
                var e = {},
                    i = a.CSS && a.CSS.supports;
                return (
                    ["auto", "manipulation", "pan-y", "pan-x", "pan-x pan-y", "none"].forEach(function (t) {
                        e[t] = !i || a.CSS.supports("touch-action", t);
                    }),
                        e
                );
            })();
        function It(t, e) {
            (this.manager = t), this.set(e);
        }
        It.prototype = {
            set: function (t) {
                t == St && (t = this.compute()), Et && this.manager.element.style && Ct[t] && (this.manager.element.style[xt] = t), (this.actions = t.toLowerCase().trim());
            },
            update: function () {
                this.set(this.manager.options.touchAction);
            },
            compute: function () {
                var e = [],
                    t =
                        (o(this.manager.recognizers, function (t) {
                            q(t.options.enable, [t]) && (e = e.concat(t.getTouchAction()));
                        }),
                            e.join(" "));
                if (l(t, A)) return A;
                var i = l(t, M),
                    n = l(t, R);
                return i && n ? A : i || n ? (i ? M : R) : l(t, kt) ? kt : "auto";
            },
            preventDefaults: function (t) {
                var e = t.srcEvent,
                    i = t.offsetDirection;
                if (this.manager.session.prevented) e.preventDefault();
                else {
                    var n = this.actions,
                        a = l(n, A) && !Ct[A],
                        s = l(n, R) && !Ct[R],
                        n = l(n, M) && !Ct[M];
                    if (a) {
                        var o = 1 === t.pointers.length,
                            r = t.distance < 2,
                            t = t.deltaTime < 250;
                        if (o && r && t) return;
                    }
                    if (!n || !s) return a || (s && i & x) || (n && i & E) ? this.preventSrc(e) : void 0;
                }
            },
            preventSrc: function (t) {
                (this.manager.session.prevented = !0), t.preventDefault();
            },
        };
        function H(t) {
            (this.options = r({}, this.defaults, t || {})), (this.id = G++), (this.manager = null), (this.options.enable = j(this.options.enable, !0)), (this.state = 1), (this.simultaneous = {}), (this.requireFail = []);
        }
        function At(t) {
            return 16 & t ? "cancel" : 8 & t ? "end" : 4 & t ? "move" : 2 & t ? "start" : "";
        }
        function Mt(t) {
            return t == O ? "down" : t == T ? "up" : t == D ? "left" : t == w ? "right" : "";
        }
        function Rt(t, e) {
            e = e.manager;
            return e ? e.get(t) : t;
        }
        function _() {
            H.apply(this, arguments);
        }
        function Ht() {
            _.apply(this, arguments), (this.pX = null), (this.pY = null);
        }
        function _t() {
            _.apply(this, arguments);
        }
        function Bt() {
            H.apply(this, arguments), (this._timer = null), (this._input = null);
        }
        function Lt() {
            _.apply(this, arguments);
        }
        function Nt() {
            _.apply(this, arguments);
        }
        function zt() {
            H.apply(this, arguments), (this.pTime = !1), (this.pCenter = !1), (this._timer = null), (this._input = null), (this.count = 0);
        }
        function B(t, e) {
            return ((e = e || {}).recognizers = j(e.recognizers, B.defaults.preset)), new Ft(t, e);
        }
        (H.prototype = {
            defaults: {},
            set: function (t) {
                return r(this.options, t), this.manager && this.manager.touchAction.update(), this;
            },
            recognizeWith: function (t) {
                if (i(t, "recognizeWith", this)) return this;
                var e = this.simultaneous;
                return e[(t = Rt(t, this)).id] || (e[t.id] = t).recognizeWith(this), this;
            },
            dropRecognizeWith: function (t) {
                return i(t, "dropRecognizeWith", this) || ((t = Rt(t, this)), delete this.simultaneous[t.id]), this;
            },
            requireFailure: function (t) {
                if (i(t, "requireFailure", this)) return this;
                var e = this.requireFail;
                return -1 === d(e, (t = Rt(t, this))) && (e.push(t), t.requireFailure(this)), this;
            },
            dropRequireFailure: function (t) {
                if (i(t, "dropRequireFailure", this)) return this;
                t = Rt(t, this);
                t = d(this.requireFail, t);
                return -1 < t && this.requireFail.splice(t, 1), this;
            },
            hasRequireFailures: function () {
                return 0 < this.requireFail.length;
            },
            canRecognizeWith: function (t) {
                return !!this.simultaneous[t.id];
            },
            emit: function (e) {
                var i = this,
                    t = this.state;
                function n(t) {
                    i.manager.emit(t, e);
                }
                t < 8 && n(i.options.event + At(t)), n(i.options.event), e.additionalEvent && n(e.additionalEvent), 8 <= t && n(i.options.event + At(t));
            },
            tryEmit: function (t) {
                if (this.canEmit()) return this.emit(t);
                this.state = 32;
            },
            canEmit: function () {
                for (var t = 0; t < this.requireFail.length; ) {
                    if (!(33 & this.requireFail[t].state)) return !1;
                    t++;
                }
                return !0;
            },
            recognize: function (t) {
                t = r({}, t);
                if (!q(this.options.enable, [this, t])) return this.reset(), void (this.state = 32);
                56 & this.state && (this.state = 1), (this.state = this.process(t)), 30 & this.state && this.tryEmit(t);
            },
            process: function (t) {},
            getTouchAction: function () {},
            reset: function () {},
        }),
            t(_, H, {
                defaults: { pointers: 1 },
                attrTest: function (t) {
                    var e = this.options.pointers;
                    return 0 === e || t.pointers.length === e;
                },
                process: function (t) {
                    var e = this.state,
                        i = t.eventType,
                        n = 6 & e,
                        t = this.attrTest(t);
                    return n && (i & v || !t) ? 16 | e : n || t ? (i & b ? 8 | e : 2 & e ? 4 | e : 2) : 32;
                },
            }),
            t(Ht, _, {
                defaults: { event: "pan", threshold: 10, pointers: 1, direction: nt },
                getTouchAction: function () {
                    var t = this.options.direction,
                        e = [];
                    return t & x && e.push(R), t & E && e.push(M), e;
                },
                directionTest: function (t) {
                    var e = this.options,
                        i = !0,
                        n = t.distance,
                        a = t.direction,
                        s = t.deltaX,
                        o = t.deltaY;
                    return (
                        a & e.direction || (n = e.direction & x ? ((a = 0 === s ? y : s < 0 ? D : w), (i = s != this.pX), Math.abs(t.deltaX)) : ((a = 0 === o ? y : o < 0 ? T : O), (i = o != this.pY), Math.abs(t.deltaY))),
                            (t.direction = a),
                        i && n > e.threshold && a & e.direction
                    );
                },
                attrTest: function (t) {
                    return _.prototype.attrTest.call(this, t) && (2 & this.state || (!(2 & this.state) && this.directionTest(t)));
                },
                emit: function (t) {
                    (this.pX = t.deltaX), (this.pY = t.deltaY);
                    var e = Mt(t.direction);
                    e && (t.additionalEvent = this.options.event + e), this._super.emit.call(this, t);
                },
            }),
            t(_t, _, {
                defaults: { event: "pinch", threshold: 0, pointers: 2 },
                getTouchAction: function () {
                    return [A];
                },
                attrTest: function (t) {
                    return this._super.attrTest.call(this, t) && (Math.abs(t.scale - 1) > this.options.threshold || 2 & this.state);
                },
                emit: function (t) {
                    var e;
                    1 !== t.scale && ((e = t.scale < 1 ? "in" : "out"), (t.additionalEvent = this.options.event + e)), this._super.emit.call(this, t);
                },
            }),
            t(Bt, H, {
                defaults: { event: "press", pointers: 1, time: 251, threshold: 9 },
                getTouchAction: function () {
                    return ["auto"];
                },
                process: function (t) {
                    var e = this.options,
                        i = t.pointers.length === e.pointers,
                        n = t.distance < e.threshold,
                        a = t.deltaTime > e.time;
                    if (((this._input = t), !n || !i || (t.eventType & (b | v) && !a))) this.reset();
                    else if (t.eventType & m)
                        this.reset(),
                            (this._timer = P(
                                function () {
                                    (this.state = 8), this.tryEmit();
                                },
                                e.time,
                                this
                            ));
                    else if (t.eventType & b) return 8;
                    return 32;
                },
                reset: function () {
                    clearTimeout(this._timer);
                },
                emit: function (t) {
                    8 === this.state && (t && t.eventType & b ? this.manager.emit(this.options.event + "up", t) : ((this._input.timeStamp = V()), this.manager.emit(this.options.event, this._input)));
                },
            }),
            t(Lt, _, {
                defaults: { event: "rotate", threshold: 0, pointers: 2 },
                getTouchAction: function () {
                    return [A];
                },
                attrTest: function (t) {
                    return this._super.attrTest.call(this, t) && (Math.abs(t.rotation) > this.options.threshold || 2 & this.state);
                },
            }),
            t(Nt, _, {
                defaults: { event: "swipe", threshold: 10, velocity: 0.3, direction: x | E, pointers: 1 },
                getTouchAction: function () {
                    return Ht.prototype.getTouchAction.call(this);
                },
                attrTest: function (t) {
                    var e,
                        i = this.options.direction;
                    return (
                        i & (x | E) ? (e = t.overallVelocity) : i & x ? (e = t.overallVelocityX) : i & E && (e = t.overallVelocityY),
                        this._super.attrTest.call(this, t) && i & t.offsetDirection && t.distance > this.options.threshold && t.maxPointers == this.options.pointers && f(e) > this.options.velocity && t.eventType & b
                    );
                },
                emit: function (t) {
                    var e = Mt(t.offsetDirection);
                    e && this.manager.emit(this.options.event + e, t), this.manager.emit(this.options.event, t);
                },
            }),
            t(zt, H, {
                defaults: { event: "tap", pointers: 1, taps: 1, interval: 300, time: 250, threshold: 9, posThreshold: 10 },
                getTouchAction: function () {
                    return [kt];
                },
                process: function (t) {
                    var e = this.options,
                        i = t.pointers.length === e.pointers,
                        n = t.distance < e.threshold,
                        a = t.deltaTime < e.time;
                    if ((this.reset(), t.eventType & m && 0 === this.count)) return this.failTimeout();
                    if (n && a && i) {
                        if (t.eventType != b) return this.failTimeout();
                        (n = !this.pTime || t.timeStamp - this.pTime < e.interval), (a = !this.pCenter || C(this.pCenter, t.center) < e.posThreshold);
                        if (((this.pTime = t.timeStamp), (this.pCenter = t.center), a && n ? (this.count += 1) : (this.count = 1), (this._input = t), 0 == this.count % e.taps))
                            return this.hasRequireFailures()
                                ? ((this._timer = P(
                                    function () {
                                        (this.state = 8), this.tryEmit();
                                    },
                                    e.interval,
                                    this
                                )),
                                    2)
                                : 8;
                    }
                    return 32;
                },
                failTimeout: function () {
                    return (
                        (this._timer = P(
                            function () {
                                this.state = 32;
                            },
                            this.options.interval,
                            this
                        )),
                            32
                    );
                },
                reset: function () {
                    clearTimeout(this._timer);
                },
                emit: function () {
                    8 == this.state && ((this._input.tapCount = this.count), this.manager.emit(this.options.event, this._input));
                },
            }),
            (B.VERSION = "2.0.8"),
            (B.defaults = {
                domEvents: !1,
                touchAction: St,
                enable: !0,
                inputTarget: null,
                inputClass: null,
                preset: [[Lt, { enable: !1 }], [_t, { enable: !1 }, ["rotate"]], [Nt, { direction: x }], [Ht, { direction: x }, ["swipe"]], [zt], [zt, { event: "doubletap", taps: 2 }, ["tap"]], [Bt]],
                cssProps: { userSelect: "none", touchSelect: "none", touchCallout: "none", contentZooming: "none", userDrag: "none", tapHighlightColor: "rgba(0,0,0,0)" },
            });
        function Ft(t, e) {
            (this.options = r({}, B.defaults, e || {})),
                (this.options.inputTarget = this.options.inputTarget || t),
                (this.handlers = {}),
                (this.session = {}),
                (this.recognizers = []),
                (this.oldCssProps = {}),
                (this.element = t),
                (this.input = new ((e = this).options.inputClass || (Z ? mt : tt ? Dt : J ? Tt : I))(e, st)),
                (this.touchAction = new It(this, this.options.touchAction)),
                Vt(this, !0),
                o(
                    this.options.recognizers,
                    function (t) {
                        var e = this.add(new t[0](t[1]));
                        t[2] && e.recognizeWith(t[2]), t[3] && e.requireFailure(t[3]);
                    },
                    this
                );
        }
        function Vt(i, n) {
            var a,
                s = i.element;
            s.style &&
            (o(i.options.cssProps, function (t, e) {
                (a = g(s.style, e)), n ? ((i.oldCssProps[a] = s.style[a]), (s.style[a] = t)) : (s.style[a] = i.oldCssProps[a] || "");
            }),
            n || (i.oldCssProps = {}));
        }
        (Ft.prototype = {
            set: function (t) {
                return r(this.options, t), t.touchAction && this.touchAction.update(), t.inputTarget && (this.input.destroy(), (this.input.target = t.inputTarget), this.input.init()), this;
            },
            stop: function (t) {
                this.session.stopped = t ? 2 : 1;
            },
            recognize: function (t) {
                var e = this.session;
                if (!e.stopped) {
                    this.touchAction.preventDefaults(t);
                    for (var i, n = this.recognizers, a = e.curRecognizer, s = ((!a || 8 & a.state) && (a = e.curRecognizer = null), 0); s < n.length; )
                        (i = n[s]), 2 === e.stopped || (a && i != a && !i.canRecognizeWith(a)) ? i.reset() : i.recognize(t), !a && 14 & i.state && (a = e.curRecognizer = i), s++;
                }
            },
            get: function (t) {
                if (t instanceof H) return t;
                for (var e = this.recognizers, i = 0; i < e.length; i++) if (e[i].options.event == t) return e[i];
                return null;
            },
            add: function (t) {
                if (i(t, "add", this)) return this;
                var e = this.get(t.options.event);
                return e && this.remove(e), this.recognizers.push(t), (t.manager = this).touchAction.update(), t;
            },
            remove: function (t) {
                return i(t, "remove", this) || ((t = this.get(t)) && -1 !== (t = d((e = this.recognizers), t)) && (e.splice(t, 1), this.touchAction.update())), this;
                var e;
            },
            on: function (t, e) {
                var i;
                if (t !== h && e !== h)
                    return (
                        (i = this.handlers),
                            o(c(t), function (t) {
                                (i[t] = i[t] || []), i[t].push(e);
                            }),
                            this
                    );
            },
            off: function (t, e) {
                var i;
                if (t !== h)
                    return (
                        (i = this.handlers),
                            o(c(t), function (t) {
                                e ? i[t] && i[t].splice(d(i[t], e), 1) : delete i[t];
                            }),
                            this
                    );
            },
            emit: function (t, e) {
                this.options.domEvents && ((i = t), (n = e), (a = L.createEvent("Event")).initEvent(i, !0, !0), (a.gesture = n).target.dispatchEvent(a));
                var i,
                    n,
                    a,
                    s = this.handlers[t] && this.handlers[t].slice();
                if (s && s.length) {
                    (e.type = t),
                        (e.preventDefault = function () {
                            e.srcEvent.preventDefault();
                        });
                    for (var o = 0; o < s.length; ) s[o](e), o++;
                }
            },
            destroy: function () {
                this.element && Vt(this, !1), (this.handlers = {}), (this.session = {}), this.input.destroy(), (this.element = null);
            },
        }),
            r(B, {
                INPUT_START: m,
                INPUT_MOVE: 2,
                INPUT_END: b,
                INPUT_CANCEL: v,
                STATE_POSSIBLE: 1,
                STATE_BEGAN: 2,
                STATE_CHANGED: 4,
                STATE_ENDED: 8,
                STATE_RECOGNIZED: 8,
                STATE_CANCELLED: 16,
                STATE_FAILED: 32,
                DIRECTION_NONE: y,
                DIRECTION_LEFT: D,
                DIRECTION_RIGHT: w,
                DIRECTION_UP: T,
                DIRECTION_DOWN: O,
                DIRECTION_HORIZONTAL: x,
                DIRECTION_VERTICAL: E,
                DIRECTION_ALL: nt,
                Manager: Ft,
                Input: k,
                TouchAction: It,
                TouchInput: Dt,
                MouseInput: I,
                PointerEventInput: mt,
                TouchMouseInput: Tt,
                SingleTouchInput: vt,
                Recognizer: H,
                AttrRecognizer: _,
                Tap: zt,
                Pan: Ht,
                Swipe: Nt,
                Pinch: _t,
                Rotate: Lt,
                Press: Bt,
                on: e,
                off: n,
                each: o,
                merge: U,
                extend: Y,
                assign: r,
                inherit: t,
                bindFn: X,
                prefixed: g,
            }),
            ((void 0 !== a ? a : "undefined" != typeof self ? self : {}).Hammer = B),
            "function" == typeof define && define.amd
                ? define(function () {
                    return B;
                })
                : "undefined" != typeof module && module.exports
                    ? (module.exports = B)
                    : (a.Hammer = B);
    })(window, document);
//# sourceMappingURL=caleran.min.js.map
